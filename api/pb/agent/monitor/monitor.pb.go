// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.11.4
// source: monitor.proto

package monitor

import (
	common "./common"
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CpuMonitor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CpuUsage      string `protobuf:"bytes,1,opt,name=cpu_usage,json=cpuUsage,proto3" json:"cpu_usage,omitempty"`
	CpuLoadavg    string `protobuf:"bytes,2,opt,name=cpu_loadavg,json=cpuLoadavg,proto3" json:"cpu_loadavg,omitempty"`
	CpuLoadavg5M  string `protobuf:"bytes,3,opt,name=cpu_loadavg5m,json=cpuLoadavg5m,proto3" json:"cpu_loadavg5m,omitempty"`
	CpuLoadavg15M string `protobuf:"bytes,4,opt,name=cpu_loadavg15m,json=cpuLoadavg15m,proto3" json:"cpu_loadavg15m,omitempty"`
}

func (x *CpuMonitor) Reset() {
	*x = CpuMonitor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monitor_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CpuMonitor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CpuMonitor) ProtoMessage() {}

func (x *CpuMonitor) ProtoReflect() protoreflect.Message {
	mi := &file_monitor_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CpuMonitor.ProtoReflect.Descriptor instead.
func (*CpuMonitor) Descriptor() ([]byte, []int) {
	return file_monitor_proto_rawDescGZIP(), []int{0}
}

func (x *CpuMonitor) GetCpuUsage() string {
	if x != nil {
		return x.CpuUsage
	}
	return ""
}

func (x *CpuMonitor) GetCpuLoadavg() string {
	if x != nil {
		return x.CpuLoadavg
	}
	return ""
}

func (x *CpuMonitor) GetCpuLoadavg5M() string {
	if x != nil {
		return x.CpuLoadavg5M
	}
	return ""
}

func (x *CpuMonitor) GetCpuLoadavg15M() string {
	if x != nil {
		return x.CpuLoadavg15M
	}
	return ""
}

type MemMoitor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemUsed  string `protobuf:"bytes,1,opt,name=mem_used,json=memUsed,proto3" json:"mem_used,omitempty"`
	MemUsage string `protobuf:"bytes,2,opt,name=mem_usage,json=memUsage,proto3" json:"mem_usage,omitempty"`
}

func (x *MemMoitor) Reset() {
	*x = MemMoitor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monitor_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemMoitor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemMoitor) ProtoMessage() {}

func (x *MemMoitor) ProtoReflect() protoreflect.Message {
	mi := &file_monitor_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemMoitor.ProtoReflect.Descriptor instead.
func (*MemMoitor) Descriptor() ([]byte, []int) {
	return file_monitor_proto_rawDescGZIP(), []int{1}
}

func (x *MemMoitor) GetMemUsed() string {
	if x != nil {
		return x.MemUsed
	}
	return ""
}

func (x *MemMoitor) GetMemUsage() string {
	if x != nil {
		return x.MemUsage
	}
	return ""
}

type DiskMonitor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CvmDiskUsage string `protobuf:"bytes,1,opt,name=cvm_disk_usage,json=cvmDiskUsage,proto3" json:"cvm_disk_usage,omitempty"`
}

func (x *DiskMonitor) Reset() {
	*x = DiskMonitor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monitor_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiskMonitor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiskMonitor) ProtoMessage() {}

func (x *DiskMonitor) ProtoReflect() protoreflect.Message {
	mi := &file_monitor_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiskMonitor.ProtoReflect.Descriptor instead.
func (*DiskMonitor) Descriptor() ([]byte, []int) {
	return file_monitor_proto_rawDescGZIP(), []int{2}
}

func (x *DiskMonitor) GetCvmDiskUsage() string {
	if x != nil {
		return x.CvmDiskUsage
	}
	return ""
}

type NetMonitor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 单位 Mbps
	LanOutTraffic string `protobuf:"bytes,1,opt,name=lan_out_traffic,json=lanOutTraffic,proto3" json:"lan_out_traffic,omitempty"`
	LanInTraffic  string `protobuf:"bytes,2,opt,name=lan_in_traffic,json=lanInTraffic,proto3" json:"lan_in_traffic,omitempty"`
	LanOutPkg     string `protobuf:"bytes,3,opt,name=lan_out_pkg,json=lanOutPkg,proto3" json:"lan_out_pkg,omitempty"`
	LanInPkg      string `protobuf:"bytes,4,opt,name=lan_in_pkg,json=lanInPkg,proto3" json:"lan_in_pkg,omitempty"`
	WanOutTraffic string `protobuf:"bytes,5,opt,name=wan_out_traffic,json=wanOutTraffic,proto3" json:"wan_out_traffic,omitempty"`
	WanInTraffic  string `protobuf:"bytes,6,opt,name=wan_in_traffic,json=wanInTraffic,proto3" json:"wan_in_traffic,omitempty"`
	WanOutPkg     string `protobuf:"bytes,7,opt,name=wan_out_pkg,json=wanOutPkg,proto3" json:"wan_out_pkg,omitempty"`
	WanInPkg      string `protobuf:"bytes,8,opt,name=wan_in_pkg,json=wanInPkg,proto3" json:"wan_in_pkg,omitempty"`
	AccOutTraffic string `protobuf:"bytes,9,opt,name=acc_out_traffic,json=accOutTraffic,proto3" json:"acc_out_traffic,omitempty"`
	TcpCurrEstab  string `protobuf:"bytes,10,opt,name=tcp_curr_estab,json=tcpCurrEstab,proto3" json:"tcp_curr_estab,omitempty"`
	TimeOffset    string `protobuf:"bytes,11,opt,name=time_offset,json=timeOffset,proto3" json:"time_offset,omitempty"`
}

func (x *NetMonitor) Reset() {
	*x = NetMonitor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monitor_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetMonitor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetMonitor) ProtoMessage() {}

func (x *NetMonitor) ProtoReflect() protoreflect.Message {
	mi := &file_monitor_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetMonitor.ProtoReflect.Descriptor instead.
func (*NetMonitor) Descriptor() ([]byte, []int) {
	return file_monitor_proto_rawDescGZIP(), []int{3}
}

func (x *NetMonitor) GetLanOutTraffic() string {
	if x != nil {
		return x.LanOutTraffic
	}
	return ""
}

func (x *NetMonitor) GetLanInTraffic() string {
	if x != nil {
		return x.LanInTraffic
	}
	return ""
}

func (x *NetMonitor) GetLanOutPkg() string {
	if x != nil {
		return x.LanOutPkg
	}
	return ""
}

func (x *NetMonitor) GetLanInPkg() string {
	if x != nil {
		return x.LanInPkg
	}
	return ""
}

func (x *NetMonitor) GetWanOutTraffic() string {
	if x != nil {
		return x.WanOutTraffic
	}
	return ""
}

func (x *NetMonitor) GetWanInTraffic() string {
	if x != nil {
		return x.WanInTraffic
	}
	return ""
}

func (x *NetMonitor) GetWanOutPkg() string {
	if x != nil {
		return x.WanOutPkg
	}
	return ""
}

func (x *NetMonitor) GetWanInPkg() string {
	if x != nil {
		return x.WanInPkg
	}
	return ""
}

func (x *NetMonitor) GetAccOutTraffic() string {
	if x != nil {
		return x.AccOutTraffic
	}
	return ""
}

func (x *NetMonitor) GetTcpCurrEstab() string {
	if x != nil {
		return x.TcpCurrEstab
	}
	return ""
}

func (x *NetMonitor) GetTimeOffset() string {
	if x != nil {
		return x.TimeOffset
	}
	return ""
}

type MachineMonitor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentId     *common.AgentId `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	CpuMonitor  *CpuMonitor     `protobuf:"bytes,2,opt,name=cpu_monitor,json=cpuMonitor,proto3" json:"cpu_monitor,omitempty"`
	MemMonitor  *MemMoitor      `protobuf:"bytes,3,opt,name=mem_monitor,json=memMonitor,proto3" json:"mem_monitor,omitempty"`
	NetMonitor  *NetMonitor     `protobuf:"bytes,4,opt,name=net_monitor,json=netMonitor,proto3" json:"net_monitor,omitempty"`
	DiskMonitor *DiskMonitor    `protobuf:"bytes,5,opt,name=disk_monitor,json=diskMonitor,proto3" json:"disk_monitor,omitempty"`
}

func (x *MachineMonitor) Reset() {
	*x = MachineMonitor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monitor_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MachineMonitor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineMonitor) ProtoMessage() {}

func (x *MachineMonitor) ProtoReflect() protoreflect.Message {
	mi := &file_monitor_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineMonitor.ProtoReflect.Descriptor instead.
func (*MachineMonitor) Descriptor() ([]byte, []int) {
	return file_monitor_proto_rawDescGZIP(), []int{4}
}

func (x *MachineMonitor) GetAgentId() *common.AgentId {
	if x != nil {
		return x.AgentId
	}
	return nil
}

func (x *MachineMonitor) GetCpuMonitor() *CpuMonitor {
	if x != nil {
		return x.CpuMonitor
	}
	return nil
}

func (x *MachineMonitor) GetMemMonitor() *MemMoitor {
	if x != nil {
		return x.MemMonitor
	}
	return nil
}

func (x *MachineMonitor) GetNetMonitor() *NetMonitor {
	if x != nil {
		return x.NetMonitor
	}
	return nil
}

func (x *MachineMonitor) GetDiskMonitor() *DiskMonitor {
	if x != nil {
		return x.DiskMonitor
	}
	return nil
}

var File_monitor_proto protoreflect.FileDescriptor

var file_monitor_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x96, 0x01, 0x0a, 0x0a, 0x43, 0x70, 0x75, 0x4d, 0x6f,
	0x6e, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x70, 0x75, 0x5f, 0x75, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x70, 0x75, 0x55, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x70, 0x75, 0x5f, 0x6c, 0x6f, 0x61, 0x64, 0x61, 0x76,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x70, 0x75, 0x4c, 0x6f, 0x61, 0x64,
	0x61, 0x76, 0x67, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x70, 0x75, 0x5f, 0x6c, 0x6f, 0x61, 0x64, 0x61,
	0x76, 0x67, 0x35, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x70, 0x75, 0x4c,
	0x6f, 0x61, 0x64, 0x61, 0x76, 0x67, 0x35, 0x6d, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x70, 0x75, 0x5f,
	0x6c, 0x6f, 0x61, 0x64, 0x61, 0x76, 0x67, 0x31, 0x35, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x63, 0x70, 0x75, 0x4c, 0x6f, 0x61, 0x64, 0x61, 0x76, 0x67, 0x31, 0x35, 0x6d, 0x22,
	0x43, 0x0a, 0x09, 0x4d, 0x65, 0x6d, 0x4d, 0x6f, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x19, 0x0a, 0x08,
	0x6d, 0x65, 0x6d, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x6d, 0x55, 0x73, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x5f, 0x75,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x55,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x33, 0x0a, 0x0b, 0x44, 0x69, 0x73, 0x6b, 0x4d, 0x6f, 0x6e, 0x69,
	0x74, 0x6f, 0x72, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x76, 0x6d, 0x5f, 0x64, 0x69, 0x73, 0x6b, 0x5f,
	0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x76, 0x6d,
	0x44, 0x69, 0x73, 0x6b, 0x55, 0x73, 0x61, 0x67, 0x65, 0x22, 0x93, 0x03, 0x0a, 0x0a, 0x4e, 0x65,
	0x74, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x26, 0x0a, 0x0f, 0x6c, 0x61, 0x6e, 0x5f,
	0x6f, 0x75, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x6c, 0x61, 0x6e, 0x4f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63,
	0x12, 0x24, 0x0a, 0x0e, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x6e, 0x5f, 0x74, 0x72, 0x61, 0x66, 0x66,
	0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x61, 0x6e, 0x49, 0x6e, 0x54,
	0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x12, 0x1e, 0x0a, 0x0b, 0x6c, 0x61, 0x6e, 0x5f, 0x6f, 0x75,
	0x74, 0x5f, 0x70, 0x6b, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x61, 0x6e,
	0x4f, 0x75, 0x74, 0x50, 0x6b, 0x67, 0x12, 0x1c, 0x0a, 0x0a, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x6e,
	0x5f, 0x70, 0x6b, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x49,
	0x6e, 0x50, 0x6b, 0x67, 0x12, 0x26, 0x0a, 0x0f, 0x77, 0x61, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x5f,
	0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x77,
	0x61, 0x6e, 0x4f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x12, 0x24, 0x0a, 0x0e,
	0x77, 0x61, 0x6e, 0x5f, 0x69, 0x6e, 0x5f, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x77, 0x61, 0x6e, 0x49, 0x6e, 0x54, 0x72, 0x61, 0x66, 0x66,
	0x69, 0x63, 0x12, 0x1e, 0x0a, 0x0b, 0x77, 0x61, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x70, 0x6b,
	0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x77, 0x61, 0x6e, 0x4f, 0x75, 0x74, 0x50,
	0x6b, 0x67, 0x12, 0x1c, 0x0a, 0x0a, 0x77, 0x61, 0x6e, 0x5f, 0x69, 0x6e, 0x5f, 0x70, 0x6b, 0x67,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x61, 0x6e, 0x49, 0x6e, 0x50, 0x6b, 0x67,
	0x12, 0x26, 0x0a, 0x0f, 0x61, 0x63, 0x63, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x66,
	0x66, 0x69, 0x63, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x4f, 0x75,
	0x74, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x12, 0x24, 0x0a, 0x0e, 0x74, 0x63, 0x70, 0x5f,
	0x63, 0x75, 0x72, 0x72, 0x5f, 0x65, 0x73, 0x74, 0x61, 0x62, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x74, 0x63, 0x70, 0x43, 0x75, 0x72, 0x72, 0x45, 0x73, 0x74, 0x61, 0x62, 0x12, 0x1f,
	0x0a, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22,
	0x96, 0x02, 0x0a, 0x0e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x4d, 0x6f, 0x6e, 0x69, 0x74,
	0x6f, 0x72, 0x12, 0x2a, 0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x34,
	0x0a, 0x0b, 0x63, 0x70, 0x75, 0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x2e, 0x43, 0x70,
	0x75, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x0a, 0x63, 0x70, 0x75, 0x4d, 0x6f, 0x6e,
	0x69, 0x74, 0x6f, 0x72, 0x12, 0x33, 0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x5f, 0x6d, 0x6f, 0x6e, 0x69,
	0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x6f, 0x6e, 0x69,
	0x74, 0x6f, 0x72, 0x2e, 0x4d, 0x65, 0x6d, 0x4d, 0x6f, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x0a, 0x6d,
	0x65, 0x6d, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x34, 0x0a, 0x0b, 0x6e, 0x65, 0x74,
	0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x2e, 0x4e, 0x65, 0x74, 0x4d, 0x6f, 0x6e, 0x69,
	0x74, 0x6f, 0x72, 0x52, 0x0a, 0x6e, 0x65, 0x74, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x12,
	0x37, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x6b, 0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x2e,
	0x44, 0x69, 0x73, 0x6b, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x0b, 0x64, 0x69, 0x73,
	0x6b, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x32, 0x5a, 0x0a, 0x0e, 0x4d, 0x6f, 0x6e, 0x69,
	0x74, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x69, 0x76, 0x63, 0x65, 0x12, 0x48, 0x0a, 0x12, 0x4d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x12, 0x17, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x1a, 0x17, 0x2e, 0x6d, 0x6f, 0x6e, 0x69,
	0x74, 0x6f, 0x72, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x4d, 0x6f, 0x6e, 0x69, 0x74,
	0x6f, 0x72, 0x22, 0x00, 0x42, 0x0b, 0x5a, 0x09, 0x2e, 0x2f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f,
	0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_monitor_proto_rawDescOnce sync.Once
	file_monitor_proto_rawDescData = file_monitor_proto_rawDesc
)

func file_monitor_proto_rawDescGZIP() []byte {
	file_monitor_proto_rawDescOnce.Do(func() {
		file_monitor_proto_rawDescData = protoimpl.X.CompressGZIP(file_monitor_proto_rawDescData)
	})
	return file_monitor_proto_rawDescData
}

var file_monitor_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_monitor_proto_goTypes = []interface{}{
	(*CpuMonitor)(nil),     // 0: monitor.CpuMonitor
	(*MemMoitor)(nil),      // 1: monitor.MemMoitor
	(*DiskMonitor)(nil),    // 2: monitor.DiskMonitor
	(*NetMonitor)(nil),     // 3: monitor.NetMonitor
	(*MachineMonitor)(nil), // 4: monitor.MachineMonitor
	(*common.AgentId)(nil), // 5: common.AgentId
}
var file_monitor_proto_depIdxs = []int32{
	5, // 0: monitor.MachineMonitor.agent_id:type_name -> common.AgentId
	0, // 1: monitor.MachineMonitor.cpu_monitor:type_name -> monitor.CpuMonitor
	1, // 2: monitor.MachineMonitor.mem_monitor:type_name -> monitor.MemMoitor
	3, // 3: monitor.MachineMonitor.net_monitor:type_name -> monitor.NetMonitor
	2, // 4: monitor.MachineMonitor.disk_monitor:type_name -> monitor.DiskMonitor
	4, // 5: monitor.MonitorSerivce.MachineStateReport:input_type -> monitor.MachineMonitor
	4, // 6: monitor.MonitorSerivce.MachineStateReport:output_type -> monitor.MachineMonitor
	6, // [6:7] is the sub-list for method output_type
	5, // [5:6] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_monitor_proto_init() }
func file_monitor_proto_init() {
	if File_monitor_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_monitor_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CpuMonitor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monitor_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemMoitor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monitor_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiskMonitor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monitor_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetMonitor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monitor_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MachineMonitor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_monitor_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_monitor_proto_goTypes,
		DependencyIndexes: file_monitor_proto_depIdxs,
		MessageInfos:      file_monitor_proto_msgTypes,
	}.Build()
	File_monitor_proto = out.File
	file_monitor_proto_rawDesc = nil
	file_monitor_proto_goTypes = nil
	file_monitor_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// MonitorSerivceClient is the client API for MonitorSerivce service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MonitorSerivceClient interface {
	MachineStateReport(ctx context.Context, in *MachineMonitor, opts ...grpc.CallOption) (*MachineMonitor, error)
}

type monitorSerivceClient struct {
	cc grpc.ClientConnInterface
}

func NewMonitorSerivceClient(cc grpc.ClientConnInterface) MonitorSerivceClient {
	return &monitorSerivceClient{cc}
}

func (c *monitorSerivceClient) MachineStateReport(ctx context.Context, in *MachineMonitor, opts ...grpc.CallOption) (*MachineMonitor, error) {
	out := new(MachineMonitor)
	err := c.cc.Invoke(ctx, "/monitor.MonitorSerivce/MachineStateReport", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MonitorSerivceServer is the server API for MonitorSerivce service.
type MonitorSerivceServer interface {
	MachineStateReport(context.Context, *MachineMonitor) (*MachineMonitor, error)
}

// UnimplementedMonitorSerivceServer can be embedded to have forward compatible implementations.
type UnimplementedMonitorSerivceServer struct {
}

func (*UnimplementedMonitorSerivceServer) MachineStateReport(context.Context, *MachineMonitor) (*MachineMonitor, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MachineStateReport not implemented")
}

func RegisterMonitorSerivceServer(s *grpc.Server, srv MonitorSerivceServer) {
	s.RegisterService(&_MonitorSerivce_serviceDesc, srv)
}

func _MonitorSerivce_MachineStateReport_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MachineMonitor)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MonitorSerivceServer).MachineStateReport(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monitor.MonitorSerivce/MachineStateReport",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MonitorSerivceServer).MachineStateReport(ctx, req.(*MachineMonitor))
	}
	return interceptor(ctx, in, info, handler)
}

var _MonitorSerivce_serviceDesc = grpc.ServiceDesc{
	ServiceName: "monitor.MonitorSerivce",
	HandlerType: (*MonitorSerivceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "MachineStateReport",
			Handler:    _MonitorSerivce_MachineStateReport_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "monitor.proto",
}
